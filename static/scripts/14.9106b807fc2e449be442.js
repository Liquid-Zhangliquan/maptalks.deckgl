(window.webpackJsonp=window.webpackJsonp||[]).push([[14,15],{"+7vx":function(e,t,i){"use strict";var n=i("1OyB"),r=i("vuIU"),a=i("md7G"),o=i("foSv"),s=i("ReuC"),l=i("Ji7U"),u=i("K7jV"),d=i("S2EH"),g=i("C7oE");i.d(t,"a",(function(){return f}));var c=[0,0,0,255],h={radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,getPosition:{type:"accessor",value:function(e){return e.position}},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:c},getLineColor:{type:"accessor",value:c},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}},f=function(e){function t(){return Object(n.a)(this,t),Object(a.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(l.a)(t,e),Object(r.a)(t,[{key:"getShaders",value:function(e){return Object(s.a)(Object(o.a)(t.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec2 instancePositions64xyLow;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  float outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, offset, geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  } \n  if (distToCenter > innerUnitRadius) {\n    gl_FragColor = vLineColor;\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:["project32","picking"]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}},{key:"updateState",value:function(e){var i=e.props,n=e.oldProps,r=e.changeFlags;if(Object(s.a)(Object(o.a)(t.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:r}),r.extensionsChanged){var a=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(a)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,i=this.context.viewport,n=this.props,r=n.radiusScale,a=n.radiusMinPixels,o=n.radiusMaxPixels,s=n.stroked,l=n.filled,u=n.lineWidthUnits,d=n.lineWidthScale,g=n.lineWidthMinPixels,c=n.lineWidthMaxPixels,h="pixels"===u?i.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{stroked:s?1:0,filled:l,radiusScale:r,radiusMinPixels:a,radiusMaxPixels:o,lineWidthScale:d*h,lineWidthMinPixels:g,lineWidthMaxPixels:c})).draw()}},{key:"_getModel",value:function(e){return new d.a(e,Object.assign(this.getShaders(),{id:this.props.id,geometry:new g.a({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,-1,1,0,1,1,0,1,-1,0])}}}),isInstanced:!0}))}}]),t}(u.a);f.layerName="ScatterplotLayer",f.defaultProps=h},"1Ix/":function(e,t,i){"use strict";function n(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}i.d(t,"a",(function(){return n}))},"R1+Y":function(e,t,i){"use strict";i.d(t,"a",(function(){return v}));var n=i("1OyB"),r=i("vuIU"),a=i("md7G"),o=i("foSv"),s=i("Ji7U"),l=i("2tSu"),u=i("rpwb"),d=i("5lV4"),g=i("KHNG"),c=i("ctuC"),h=i("3DrS"),f=i("Im0j"),y=new l.a,p={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,lineDashJustified:!1,getPolygon:{type:"accessor",value:function(e){return e.polygon}},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1},getLineDashArray:{type:"accessor",value:[0,0]},getElevation:{type:"accessor",value:1e3},material:y},v=function(e){function t(){return Object(n.a)(this,t),Object(a.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(r.a)(t,[{key:"initializeState",value:function(){this.state={paths:[]}}},{key:"updateState",value:function(e){var t=this,i=(e.oldProps,e.props,e.changeFlags),n=i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPolygon);if(n&&Array.isArray(i.dataChanged)){var r=this.state.paths.slice(),a=i.dataChanged.map((function(e){return Object(f.a)({data:r,getIndex:function(e){return e.__source.index},dataRange:e,replace:t._getPaths(e)})}));this.setState({paths:r,pathsDiff:a})}else n&&this.setState({paths:this._getPaths(),pathsDiff:null})}},{key:"_getPaths",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this.props,i=t.data,n=t.getPolygon,r=[],a="XY"===t.positionFormat?2:3,o=e.startRow,s=e.endRow,l=Object(u.a)(i,o,s),d=l.iterable,g=l.objectInfo,c=!0,f=!1,y=void 0;try{for(var p,v=d[Symbol.iterator]();!(c=(p=v.next()).done);c=!0){var L=p.value;g.index++;var m=h.c(n(L,g),a),P=m.positions,C=m.holeIndices;if(C)for(var S=0;S<=C.length;S++){var b=P.subarray(C[S-1]||0,C[S]||P.length);r.push(this.getSubLayerRow({path:b},L,g.index))}else r.push(this.getSubLayerRow({path:P},L,g.index))}}catch(e){f=!0,y=e}finally{try{c||null==v.return||v.return()}finally{if(f)throw y}}return r}},{key:"renderLayers",value:function(){var e=this.props,t=e.data,i=e._dataDiff,n=e.stroked,r=e.filled,a=e.extruded,o=e.wireframe,s=e.elevationScale,l=e.transitions,u=e.positionFormat,d=this.props,h=d.lineWidthUnits,f=d.lineWidthScale,y=d.lineWidthMinPixels,p=d.lineWidthMaxPixels,v=d.lineJointRounded,L=d.lineMiterLimit,m=d.lineDashJustified,P=this.props,C=P.getFillColor,S=P.getLineColor,b=P.getLineWidth,x=P.getLineDashArray,F=P.getElevation,W=P.getPolygon,M=P.updateTriggers,R=P.material,w=this.state,A=w.paths,_=w.pathsDiff,E=this.getSubLayerClass("fill",g.a),k=this.getSubLayerClass("stroke",c.a),O=this.shouldRenderSubLayer("fill",A)&&new E({_dataDiff:i,extruded:a,elevationScale:s,filled:r,wireframe:o,getElevation:F,getFillColor:C,getLineColor:S,material:R,transitions:l},this.getSubLayerProps({id:"fill",updateTriggers:{getPolygon:M.getPolygon,getElevation:M.getElevation,getFillColor:M.getFillColor,getLineColor:M.getLineColor}}),{data:t,positionFormat:u,getPolygon:W});return[!a&&O,!a&&n&&this.shouldRenderSubLayer("stroke",A)&&new k({_dataDiff:_&&function(){return _},widthUnits:h,widthScale:f,widthMinPixels:y,widthMaxPixels:p,rounded:v,miterLimit:L,dashJustified:m,transitions:l&&{getWidth:l.getLineWidth,getColor:l.getLineColor,getPath:l.getPolygon},getColor:this.getSubLayerAccessor(S),getWidth:this.getSubLayerAccessor(b),getDashArray:this.getSubLayerAccessor(x)},this.getSubLayerProps({id:"stroke",updateTriggers:{getWidth:M.getLineWidth,getColor:M.getLineColor,getDashArray:M.getLineDashArray}}),{data:A,positionFormat:u,getPath:function(e){return e.path}}),a&&O]}}]),t}(d.a);v.layerName="PolygonLayer",v.defaultProps=p},"aw+z":function(e,t,i){"use strict";i.d(t,"a",(function(){return a}));var n=i("h8nK"),r=i("1Ix/");function a(){var e,t=[.5],i=[0,1],o=1;function s(r){return r<=r?i[Object(n.a)(t,r,0,o)]:e}return s.domain=function(e){return arguments.length?(t=Array.from(e),o=Math.min(t.length,i.length-1),s):t.slice()},s.range=function(e){return arguments.length?(i=Array.from(e),o=Math.min(t.length,i.length-1),s):i.slice()},s.invertExtent=function(e){var n=i.indexOf(e);return[t[n-1],t[n]]},s.unknown=function(t){return arguments.length?(e=t,s):e},s.copy=function(){return a().domain(t).range(i).unknown(e)},r.a.apply(s,arguments)}},cwYr:function(e,t,i){"use strict";var n=i("1OyB"),r=i("vuIU"),a=i("md7G"),o=i("foSv"),s=i("Ji7U"),l=i("5lV4"),u=i("+7vx"),d=i("ctuC"),g=i("2tSu"),c=i("KHNG"),h=i("Im0j"),f=i("Jh/b");function y(e,t){for(var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},r=i.startRow,a=void 0===r?0:r,o=i.endRow,s=void 0===o?e.length:o,l=a;l<s;l++){var u=e[l];f.a.assert(u&&u.geometry,"GeoJSON does not have geometry");var d=u.geometry;if("GeometryCollection"===d.type){f.a.assert(Array.isArray(d.geometries),"GeoJSON does not have geometries array");for(var g=d.geometries,c=0;c<g.length;c++)p(g[c],n,t,u,l)}else p(d,n,t,u,l)}return n}function p(e,t,i,n,r){var a=e.type,o=e.coordinates,s=t.pointFeatures,l=t.lineFeatures,u=t.polygonFeatures,d=t.polygonOutlineFeatures;if(function(e,t){var i=v[e];for(f.a.assert(i,"Unknown GeoJSON type ".concat(e));t&&--i>0;)t=t[0];return t&&Number.isFinite(t[0])}(a,o))switch(a){case"Point":s.push(i({geometry:e},n,r));break;case"MultiPoint":o.forEach((function(e){s.push(i({geometry:{type:"Point",coordinates:e}},n,r))}));break;case"LineString":l.push(i({geometry:e},n,r));break;case"MultiLineString":o.forEach((function(e){l.push(i({geometry:{type:"LineString",coordinates:e}},n,r))}));break;case"Polygon":u.push(i({geometry:e},n,r)),o.forEach((function(e){d.push(i({geometry:{type:"LineString",coordinates:e}},n,r))}));break;case"MultiPolygon":o.forEach((function(e){u.push(i({geometry:{type:"Polygon",coordinates:e}},n,r)),e.forEach((function(e){d.push(i({geometry:{type:"LineString",coordinates:e}},n,r))}))}))}else f.a.warn("".concat(a," coordinates are malformed"))()}var v={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};i.d(t,"a",(function(){return C}));var L=new g.a,m={stroked:!0,filled:!0,extruded:!1,wireframe:!1,lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,elevationScale:1,pointRadiusScale:1,pointRadiusMinPixels:0,pointRadiusMaxPixels:Number.MAX_SAFE_INTEGER,lineDashJustified:!1,getLineColor:{type:"accessor",value:[0,0,0,255]},getFillColor:{type:"accessor",value:[0,0,0,255]},getRadius:{type:"accessor",value:1},getLineWidth:{type:"accessor",value:1},getLineDashArray:{type:"accessor",value:[0,0]},getElevation:{type:"accessor",value:1e3},material:L};function P(e){return e.geometry.coordinates}var C=function(e){function t(){return Object(n.a)(this,t),Object(a.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(r.a)(t,[{key:"initializeState",value:function(){this.state={features:{}}}},{key:"updateState",value:function(e){var t=e.props,i=e.changeFlags;if(i.dataChanged){var n=function(e){if(Array.isArray(e))return e;switch(f.a.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return f.a.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(t.data),r=this.getSubLayerRow.bind(this);if(Array.isArray(i.dataChanged)){var a=this.state.features,o={},s={};for(var l in a)o[l]=a[l].slice(),s[l]=[];var u=!0,d=!1,g=void 0;try{for(var c,p=i.dataChanged[Symbol.iterator]();!(u=(c=p.next()).done);u=!0){var v=c.value,L=y(n,r,v);for(var m in a)s[m].push(Object(h.a)({data:o[m],getIndex:function(e){return e.__source.index},dataRange:v,replace:L[m]}))}}catch(e){d=!0,g=e}finally{try{u||null==p.return||p.return()}finally{if(d)throw g}}this.setState({features:o,featuresDiff:s})}else this.setState({features:y(n,r),featuresDiff:{}})}}},{key:"renderLayers",value:function(){var e=this.state,t=e.features,i=e.featuresDiff,n=t.pointFeatures,r=t.lineFeatures,a=t.polygonFeatures,o=t.polygonOutlineFeatures,s=this.props,l=s.stroked,g=s.filled,h=s.extruded,f=s.wireframe,y=s.material,p=s.transitions,v=this.props,L=v.lineWidthUnits,m=v.lineWidthScale,C=v.lineWidthMinPixels,S=v.lineWidthMaxPixels,b=v.lineJointRounded,x=v.lineMiterLimit,F=v.pointRadiusScale,W=v.pointRadiusMinPixels,M=v.pointRadiusMaxPixels,R=v.elevationScale,w=v.lineDashJustified,A=this.props,_=A.getLineColor,E=A.getFillColor,k=A.getRadius,O=A.getLineWidth,D=A.getLineDashArray,j=A.getElevation,I=A.updateTriggers,N=this.getSubLayerClass("polygons-fill",c.a),T=this.getSubLayerClass("polygons-stroke",d.a),G=this.getSubLayerClass("line-strings",d.a),J=this.getSubLayerClass("points",u.a),U=this.shouldRenderSubLayer("polygons-fill",a)&&new N({_dataDiff:i.polygonFeatures&&function(){return i.polygonFeatures},extruded:h,elevationScale:R,filled:g,wireframe:f,material:y,getElevation:this.getSubLayerAccessor(j),getFillColor:this.getSubLayerAccessor(E),getLineColor:this.getSubLayerAccessor(_),transitions:p&&{getPolygon:p.geometry,getElevation:p.getElevation,getFillColor:p.getFillColor,getLineColor:p.getLineColor}},this.getSubLayerProps({id:"polygons-fill",updateTriggers:{getElevation:I.getElevation,getFillColor:I.getFillColor,getLineColor:I.getLineColor}}),{data:a,getPolygon:P});return[!h&&U,!h&&l&&this.shouldRenderSubLayer("polygons-stroke",o)&&new T({_dataDiff:i.polygonOutlineFeatures&&function(){return i.polygonOutlineFeatures},widthUnits:L,widthScale:m,widthMinPixels:C,widthMaxPixels:S,rounded:b,miterLimit:x,dashJustified:w,getColor:this.getSubLayerAccessor(_),getWidth:this.getSubLayerAccessor(O),getDashArray:this.getSubLayerAccessor(D),transitions:p&&{getPath:p.geometry,getColor:p.getLineColor,getWidth:p.getLineWidth}},this.getSubLayerProps({id:"polygons-stroke",updateTriggers:{getColor:I.getLineColor,getWidth:I.getLineWidth,getDashArray:I.getLineDashArray}}),{data:o,getPath:P}),this.shouldRenderSubLayer("linestrings",r)&&new G({_dataDiff:i.lineFeatures&&function(){return i.lineFeatures},widthUnits:L,widthScale:m,widthMinPixels:C,widthMaxPixels:S,rounded:b,miterLimit:x,dashJustified:w,getColor:this.getSubLayerAccessor(_),getWidth:this.getSubLayerAccessor(O),getDashArray:this.getSubLayerAccessor(D),transitions:p&&{getPath:p.geometry,getColor:p.getLineColor,getWidth:p.getLineWidth}},this.getSubLayerProps({id:"line-strings",updateTriggers:{getColor:I.getLineColor,getWidth:I.getLineWidth,getDashArray:I.getLineDashArray}}),{data:r,getPath:P}),this.shouldRenderSubLayer("points",n)&&new J({_dataDiff:i.pointFeatures&&function(){return i.pointFeatures},stroked:l,filled:g,radiusScale:F,radiusMinPixels:W,radiusMaxPixels:M,lineWidthUnits:L,lineWidthScale:m,lineWidthMinPixels:C,lineWidthMaxPixels:S,getFillColor:this.getSubLayerAccessor(E),getLineColor:this.getSubLayerAccessor(_),getRadius:this.getSubLayerAccessor(k),getLineWidth:this.getSubLayerAccessor(O),transitions:p&&{getPosition:p.geometry,getFillColor:p.getFillColor,getLineColor:p.getLineColor,getRadius:p.getRadius,getLineWidth:p.getLineWidth}},this.getSubLayerProps({id:"points",updateTriggers:{getFillColor:I.getFillColor,getLineColor:I.getLineColor,getRadius:I.getRadius,getLineWidth:I.getLineWidth}}),{data:n,getPosition:P}),h&&U]}}]),t}(l.a);C.layerName="GeoJsonLayer",C.defaultProps=m},h8nK:function(e,t,i){"use strict";var n=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN},r=function(e){return 1===e.length&&(e=function(e){return function(t,i){return n(e(t),i)}}(e)),{left:function(t,i,n,r){for(null==n&&(n=0),null==r&&(r=t.length);n<r;){var a=n+r>>>1;e(t[a],i)<0?n=a+1:r=a}return n},right:function(t,i,n,r){for(null==n&&(n=0),null==r&&(r=t.length);n<r;){var a=n+r>>>1;e(t[a],i)>0?r=a:n=a+1}return n}}}(n),a=r.right;r.left,t.a=a}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{0:function(e,t){},1:function(e,t){},Al62:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var i=function(e,t){if(void 0===t&&(t={}),!e)return null;function n(e){}e.addEventListener("webglcontextcreationerror",n,!1);var i=e.getContext("webgl2",t);return(i=i||e.getContext("experimental-webgl2",t))||(i=(i=e.getContext("webgl",t))||e.getContext("experimental-webgl",t)),e.removeEventListener("webglcontextcreationerror",n,!1),i},r=window.devicePixelRatio||window.screen.deviceXDPI/window.screen.logicalXDPI;function o(){return Math.ceil(r)||1}},ReQy:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n("1OyB"),r=n("vuIU"),o=n("LDVv"),s=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object(i.a)(this,e),this.opts=t}return Object(r.a)(e,[{key:"equals",value:function(e){return this===e||this.constructor===e.constructor&&Object(o.a)(this.opts,e.opts)}},{key:"getShaders",value:function(e){return null}},{key:"getSubLayerProps",value:function(e){var t=e.constructor.defaultProps,n=void 0===t?{}:t,i={updateTriggers:{}};for(var r in n)if(r in this.props){var o=n[r],s=this.props[r];i[r]=s,o&&"accessor"===o.type&&(i.updateTriggers[r]=this.props.updateTriggers[r],"function"==typeof s&&(i[r]=this.getSubLayerAccessor(s,!0)))}return i}},{key:"initializeState",value:function(e,t){}},{key:"updateState",value:function(e,t){}},{key:"finalizeState",value:function(e){}}]),e}()},qKqL:function(e,t,n){"use strict";n.r(t);var i=n("q1tI"),r=n("7GCR"),o=n("VIqg"),s=n("+7vx"),a=n("1OyB"),c=n("vuIU"),u=n("md7G"),l=n("foSv"),g=n("ReuC"),h=n("Ji7U"),d=n("rpwb"),v=n("K7jV"),p=n("S2EH"),f=n("C7oE"),b=[0,0,0,255],m={getSourcePosition:{type:"accessor",value:function(e){return e.sourcePosition}},getTargetPosition:{type:"accessor",value:function(e){return e.targetPosition}},getSourceColor:{type:"accessor",value:b},getTargetColor:{type:"accessor",value:b},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0},getStrokeWidth:{deprecatedFor:"getWidth"}},y=function(e){function t(){return Object(a.a)(this,t),Object(u.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(c.a)(t,[{key:"getShaders",value:function(){return Object(g.a)(Object(l.a)(t.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec4 instancePositions;\nattribute vec4 instancePositions64xyLow;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nfloat paraboloid(vec2 source, vec2 target, float ratio) {\n\n  vec2 x = mix(source, target, ratio);\n  vec2 center = mix(source, target, 0.5);\n\n  float dSourceCenter = distance(source, center);\n  float dXCenter = distance(x, center);\n  return (dSourceCenter + dXCenter) * (dSourceCenter - dXCenter);\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 getPos(vec2 source, vec2 target, float segmentRatio) {\n  float vertexHeight = sqrt(max(0.0, paraboloid(source, target, segmentRatio))) * instanceHeights;\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target - source);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * vertexHeight * sin(tiltAngle);\n\n  return vec3(\n    mix(source, target, segmentRatio) + tilt,\n    vertexHeight * cos(tiltAngle)\n  );\n}\n\nvoid main(void) {\n  geometry.worldPosition = vec3(instancePositions.xy, 0.0);\n  geometry.worldPositionAlt = vec3(instancePositions.zw, 0.0);\n\n  vec2 source = project_position(geometry.worldPosition, instancePositions64xyLow.xy).xy;\n  vec2 target = project_position(geometry.worldPositionAlt, instancePositions64xyLow.zw).xy;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n\n  vec3 currPos = getPos(source, target, segmentRatio);\n  vec3 nextPos = getPos(source, target, nextSegmentRatio);\n  vec4 curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n  vec4 next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n  geometry.position = vec4(currPos, 1.0);\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:"#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:["picking"]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:4,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:["getSourcePosition","getTargetPosition"],update:this.calculateInstancePositions},instanceSourceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getSourceColor",defaultValue:b},instanceTargetColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getTargetColor",defaultValue:b},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}},{key:"updateState",value:function(e){var n=e.props,i=e.oldProps,r=e.changeFlags;if(Object(g.a)(Object(l.a)(t.prototype),"updateState",this).call(this,{props:n,oldProps:i,changeFlags:r}),r.extensionsChanged){var o=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(o)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,n=this.context.viewport,i=this.props,r=i.widthUnits,o=i.widthScale,s=i.widthMinPixels,a=i.widthMaxPixels,c="pixels"===r?n.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{widthScale:o*c,widthMinPixels:s,widthMaxPixels:a})).draw()}},{key:"_getModel",value:function(e){for(var t=[],n=0;n<50;n++)t=t.concat([n,-1,0,n,1,0]);var i=new p.a(e,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new f.a({drawMode:5,attributes:{positions:new Float32Array(t)}}),isInstanced:!0}));return i.setUniforms({numSegments:50}),i}},{key:"calculateInstancePositions",value:function(e,t){var n=t.startRow,i=t.endRow,r=this.props,o=r.data,s=r.getSourcePosition,a=r.getTargetPosition,c=e.value,u=n*e.size,l=Object(d.a)(o,n,i),g=l.iterable,h=l.objectInfo,v=!0,p=!1,f=void 0;try{for(var b,m=g[Symbol.iterator]();!(v=(b=m.next()).done);v=!0){var y=b.value;h.index++;var _=s(y,h);c[u++]=_[0],c[u++]=_[1];var w=a(y,h);c[u++]=w[0],c[u++]=w[1]}}catch(e){p=!0,f=e}finally{try{v||null==m.return||m.return()}finally{if(p)throw f}}}}]),t}(v.a);y.layerName="ArcLayer",y.defaultProps=m;var _=n("ReQy"),w=n("lQOs"),x={source:0,target:1,custom:2};Object(w.b)("brushing",{hook:"vs:DECKGL_FILTER_GL_POSITION",injection:"\nvec2 brushingTarget;\nif (brushing_target == 0) {\n  brushingTarget = geometry.worldPosition.xy;\n} else if (brushing_target == 1) {\n  brushingTarget = geometry.worldPositionAlt.xy;\n} else {\n  #ifdef NON_INSTANCED_MODEL\n  brushingTarget = brushingTargets;\n  #else\n  brushingTarget = instanceBrushingTargets;\n  #endif\n}\nbrushing_setVisible(brushing_isPointInRange(brushingTarget));\n  "}),Object(w.b)("brushing",{hook:"fs:DECKGL_FILTER_COLOR",injection:"\nif (brushing_enabled && brushing_isVisible < 0.5) {\n  discard;\n}\n  "});var P={name:"brushing",dependencies:["project"],vs:"\n  uniform bool brushing_enabled;\n  uniform int brushing_target;\n  uniform vec2 brushing_mousePos;\n  uniform float brushing_radius;\n\n  #ifdef NON_INSTANCED_MODEL\n  attribute vec2 brushingTargets;\n  #else\n  attribute vec2 instanceBrushingTargets;\n  #endif\n\n  varying float brushing_isVisible;\n\n  bool brushing_isPointInRange(vec2 position) {\n    if (!brushing_enabled) {\n      return true;\n    }\n    vec2 source_commonspace = project_position(position);\n    vec2 target_commonspace = project_position(brushing_mousePos);\n    float distance = length((target_commonspace - source_commonspace) / project_uCommonUnitsPerMeter.xy);\n\n    return distance <= brushing_radius;\n  }\n\n  void brushing_setVisible(bool visible) {\n    brushing_isVisible = float(visible);\n  }\n",fs:"\n  uniform bool brushing_enabled;\n  varying float brushing_isVisible;\n",getUniforms:function(e){if(!e||!e.viewport)return{};var t=e.brushingEnabled,n=void 0===t||t,i=e.brushingRadius,r=void 0===i?1e4:i,o=e.brushingTarget,s=void 0===o?"source":o,a=e.mousePosition,c=e.viewport;return{brushing_enabled:Boolean(n&&a&&c.containsPixel(a)),brushing_radius:r,brushing_target:x[s]||0,brushing_mousePos:a?c.unproject([a.x-c.x,a.y-c.y]):[0,0]}}},C=function(e){function t(){return Object(a.a)(this,t),Object(u.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(c.a)(t,[{key:"getShaders",value:function(e){return{modules:[P]}}},{key:"initializeState",value:function(e,t){var n=this,i=this.getAttributeManager();i&&i.add({brushingTargets:{size:2,accessor:"getBrushingTarget",update:!this.props.getBrushingTarget&&t.useConstantTargetPositions,shaderAttributes:{brushingTargets:{divisor:0},instanceBrushingTargets:{divisor:1}}}}),t.onMouseMove=function(){n.getCurrentLayer().setNeedsRedraw()},this.context.deck&&this.context.deck.eventManager.on({pointermove:t.onMouseMove,pointerleave:t.onMouseMove})}},{key:"finalizeState",value:function(e){this.context.deck&&this.context.deck.eventManager.off({pointermove:e.onMouseMove,pointerleave:e.onMouseMove})}},{key:"useConstantTargetPositions",value:function(e){e.constant=!0,e.value=new Float32Array(2)}}]),t}(_.a);C.extensionName="BrushingExtension",C.defaultProps={getBrushingTarget:{type:"accessor",value:[0,0]},brushingTarget:"source",brushingEnabled:!0,brushingRadius:1e4};var M=n("tjUo"),S=n("Al62");function R(){return(R=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function k(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"inFlowColors",(function(){return L})),n.d(t,"outFlowColors",(function(){return T}));var j=[166,3,3],E=[35,181,184],L=[[35,181,184]],T=[[166,3,3]],D=new C,I=function(e){function t(t,n){var i;return O(k(i=e.call(this,t,n)||this),"_animate",(function(){var e=i.state,t=e.arcs,n=e.targets,r=e.sources;if(!t||!n)return null;var o={layers:[new s.a({id:"sources",data:r,brushingRadius:1e5,opacity:1,brushingEnabled:!0,pickable:!1,radiusScale:3e3,getFillColor:function(e){return e.gain>0?E:j},extensions:[D]}),new s.a({id:"targets-ring",data:n,brushingRadius:1e5,lineWidthMinPixels:2,stroked:!0,filled:!1,opacity:1,brushingEnabled:!0,radiusScale:4e3,getLineColor:function(e){return e.net>0?E:j},extensions:[D]}),new s.a({id:"targets",data:n,brushingRadius:1e5,opacity:1,brushingEnabled:!0,pickable:!0,radiusScale:3e3,onHover:i._onHover,getFillColor:function(e){return e.net>0?E:j},extensions:[D]}),new y({id:"arc",data:t,getWidth:2,opacity:.7,brushingRadius:1e5,brushingEnabled:!0,getSourcePosition:function(e){return e.source},getTargetPosition:function(e){return e.target},getSourceColor:j,getTargetColor:E,extensions:[D]})]};i.inited?i.deckLayer&&i.deckLayer.setProps(o):(i.inited=!0,i.deckLayer=new M.a("deck",o,{animation:!0,renderer:"webgl"}),i.map.addLayer(i.deckLayer))})),O(k(i),"_getLayerData",(function(e){if(!e)return null;var t=[],n=[],i=[],r={};e.forEach((function(o,s){var a=o.properties,c=a.flows,u=a.centroid,l={gain:0,loss:0};Object.keys(c).forEach((function(n){if(l[c[n]>0?"gain":"loss"]+=c[n],!(Math.abs(c[n])<50)){var o=[s,Number(n)].sort((function(e,t){return e-t})).join("-"),a=e[n].properties.centroid,g=Math.sign(c[n]);i.push({position:a,target:u,name:e[n].properties.name,radius:3,gain:-g}),r[o]||(r[o]=!0,t.push({target:g>0?u:a,source:g>0?a:u,value:c[n]}))}})),n.push(R({},l,{position:[u[0],u[1],10],net:l.gain+l.loss,name:o.properties.name}))})),n.sort((function(e,t){return Math.abs(t.net)-Math.abs(e.net)}));var s=Object(o.a)().domain([0,Math.abs(n[0].net)]).range([36,400]);return n.forEach((function(e){e.radius=Math.sqrt(s(Math.abs(e.net)))})),{arcs:t,targets:n,sources:i}})),O(k(i),"setRef",(function(e){void 0===e&&(e=null),i.container=e})),i.state={arcs:[],targets:[],sources:[]},i.container=null,i.map=null,i.deckLayer=null,i.inited=!1,i._onHover=i._onHover.bind(k(i)),i}!function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}(t,e);var n=t.prototype;return n.componentDidMount=function(){var e=this;this.map=new r.Map(this.container,{center:[-100,40.7],zoom:3,pitch:0,bearing:0,centerCross:!0,baseLayer:new r.TileLayer("tile",{urlTemplate:"https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/{z}/{x}/{y}"+(Object(S.b)()>1.5?"@2x":"")+"?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejh2N21nMzAxMmQzMnA5emRyN2lucW0ifQ.jSE-g2vsn48Ry928pqylcg"})}),fetch("https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/arc/counties.json").then((function(e){return e.json()})).then((function(t){var n=t.features;e._animate(),e.setState(R({},e._getLayerData(n)))}))},n.componentWillUnmount=function(){this.deckLayer&&this.deckLayer.remove()},n._onHover=function(e){var t=e.x,n=e.y,i=e.object;this.setState({x:t,y:n,hoveredObject:i})},n.render=function(){return this.deckLayer&&this._animate(),i.createElement("div",{ref:this.setRef,className:"map-content"})},t}(i.Component);t.default=I},tjUo:function(e,t,n){"use strict";var i=n("zGfa"),r=n("mybv"),o=n("7GCR"),s=n("Al62");function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var c={registerEvents:!0,renderer:"webgl",doubleBuffer:!0,glOptions:{alpha:!0,depth:!0,antialias:!0,stencil:!0},forceRenderOnMoving:!0,forceRenderOnZooming:!0},u={useDevicePixels:!0,autoResizeDrawingBuffer:!1},l=12756274*Math.PI/(256*Math.pow(2,20));function g(e){var t=e.getResolution(),n=e.getMaxNativeZoom(),i=e.getCenter(),r=e.getPitch(),o=e.getBearing();return{latitude:i.y,longitude:i.x,zoom:function(e){return 19-Math.log(e/l)/Math.LN2}(t),bearing:o,pitch:r,maxZoom:n}}var h=function(e){function t(t,n,i){var r;return void 0===i&&(i={}),(r=e.call(this,t,Object.assign(c,i))||this).props=Object.assign({},u,n),r._isLoad=!1,r}a(t,e);var n=t.prototype;return n.setProps=function(e){return Object.assign(this.props,e,{id:this.id}),this},n.getProps=function(){return this.props},n.prepareToDraw=function(){},n.draw=function(){this.renderLayer()},n.drawOnInteracting=function(){this.renderLayer()},n.onAdd=function(){},n.onMouseClick=function(e){var t={};e.offsetCenter||(t={type:"click",offsetCenter:e.containerPoint,srcEvent:e.domEvent}),this.deck._onEvent(t)},n.onMouseMove=function(e){var t={};e.offsetCenter||(t={offsetCenter:e.containerPoint,srcEvent:e.domEvent}),this.deck._onPointerMove(t)},n.onMouseDown=function(e){var t={};e.offsetCenter||(t={offsetCenter:e.containerPoint,srcEvent:e.domEvent}),this.deck._onPointerDown(t)},n.onRemove=function(){},n.renderLayer=function(){var e=this,t=this.getMap(),n=this._getRenderer();if(n&&t){var i=this.props._customRender,o=n.gl,s=Object.assign(this.props,{gl:o,width:!1,height:!1,viewState:g(t),_customRender:function(){i&&i()},parameters:{depthMask:!0,depthTest:!0,blendFunc:[o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA],blendEquation:o.FUNC_ADD},userData:{isExternal:!1,layers:new Set},onLoad:function(){e._isLoad=!0,e._drawLayer(t)}});this.deck||this._isLoad||(this.deck=new r.a(s),this.options.registerEvents&&(t.on("mousemove",this.onMouseMove,this),t.on("mousedown",this.onMouseDown,this),t.on("click",this.onMouseClick,this))),this._isLoad&&(this.deck.setProps(s),this.deck.props.userData.isExternal=!0,this._drawLayer(t)),n.completeRender()}},n._drawLayer=function(e){var t=this.deck.props.userData.currentViewport;t||(t=function(e,t,n){return void 0===n&&(n=!0),new i.a(Object.assign({x:0,y:0,width:e.width,height:e.height},g(t),n?{nearZMultiplier:e.height?1/e.height:1,farZMultiplier:1.01}:{nearZMultiplier:.1,farZMultiplier:10}))}(this.deck,e,!0),this.deck.props.userData.currentViewport=t),this.deck.layerManager&&this.deck._drawLayers("maptalks-deck-repaint",{viewports:[t],clearCanvas:!1})},n.remove=function(){var t=this.getMap();this.deck&&t&&(this.options.registerEvents&&(t.off("mousemove",this.onMouseMove,this),t.off("mousedown",this.onMouseDown,this),t.off("click",this.onMouseClick,this)),this.deck.finalize(),delete this.deck),e.prototype.remove.call(this)},t}(o.CanvasLayer),d=function(e){function t(){return e.apply(this,arguments)||this}a(t,e);var n=t.prototype;return n.draw=function(){this.prepareCanvas(),this.prepareDrawContext(),this._drawLayer()},n.needToRedraw=function(){var t=this.getMap();return!(t.isZooming()&&!t.getPitch())&&e.prototype.needToRedraw.call(this)},n.createCanvas=function(){if(!this.canvas&&!this.gl){var e=this.getMap(),t=e.getSize(),n=(e.getDevicePixelRatio?e.getDevicePixelRatio():Object(s.b)())||1,i=[n*t.width,n*t.height],r=i[0],a=i[1];this.canvas=o.Canvas.createCanvas(r,a,e.CanvasClass),this.canvas.style&&(this.canvas.style.width=t+"px",this.canvas.style.height=t+"px"),this.gl=Object(s.a)(this.canvas,this.layer.options.glOptions),this.onCanvasCreate(),this.layer.fire("canvascreate",{context:this.context,gl:this.gl})}},n.resizeCanvas=function(e){if(this.canvas){var t=this.getMap(),n=(t.getDevicePixelRatio?t.getDevicePixelRatio():Object(s.b)())||1,i=e||t.getSize();this.canvas.width===i.width*n&&this.canvas.height===i.height*n||(this.canvas.height=n*i.height,this.canvas.width=n*i.width,this.gl.viewport(0,0,this.canvas.width,this.canvas.height))}},n.clearCanvas=function(){this.canvas&&(this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.context&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height))},n.requestMapToRender=function(){this.setToRedraw()},n.prepareCanvas=function(){this.canvas?this.clearCanvas():this.createCanvas();var t=e.prototype.prepareCanvas.call(this);return this.layer.fire("renderstart",{context:this.context,gl:this.gl}),t},n.onZoomStart=function(){for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];e.prototype.onZoomStart.call(this,n)},n.onZoomEnd=function(){for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];e.prototype.onZoomEnd.call(this,n)},n.remove=function(){e.prototype.remove.call(this)},t}(o.renderer.CanvasLayerRenderer);h.registerRenderer("webgl",d),t.a=h}}]);
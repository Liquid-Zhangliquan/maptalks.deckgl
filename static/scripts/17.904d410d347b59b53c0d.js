(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"+7vx":function(e,t,i){"use strict";var n=i("1OyB"),o=i("vuIU"),s=i("md7G"),a=i("foSv"),r=i("ReuC"),c=i("Ji7U"),l=i("K7jV"),u=i("S2EH"),d=i("C7oE");i.d(t,"a",(function(){return v}));var h=[0,0,0,255],p={radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,getPosition:{type:"accessor",value:function(e){return e.position}},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:h},getLineColor:{type:"accessor",value:h},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}},v=function(e){function t(){return Object(n.a)(this,t),Object(s.a)(this,Object(a.a)(t).apply(this,arguments))}return Object(c.a)(t,e),Object(o.a)(t,[{key:"getShaders",value:function(e){return Object(r.a)(Object(a.a)(t.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec2 instancePositions64xyLow;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  float outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, offset, geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  } \n  if (distToCenter > innerUnitRadius) {\n    gl_FragColor = vLineColor;\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:["project32","picking"]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}},{key:"updateState",value:function(e){var i=e.props,n=e.oldProps,o=e.changeFlags;if(Object(r.a)(Object(a.a)(t.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o}),o.extensionsChanged){var s=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(s)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,i=this.context.viewport,n=this.props,o=n.radiusScale,s=n.radiusMinPixels,a=n.radiusMaxPixels,r=n.stroked,c=n.filled,l=n.lineWidthUnits,u=n.lineWidthScale,d=n.lineWidthMinPixels,h=n.lineWidthMaxPixels,p="pixels"===l?i.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{stroked:r?1:0,filled:c,radiusScale:o,radiusMinPixels:s,radiusMaxPixels:a,lineWidthScale:u*p,lineWidthMinPixels:d,lineWidthMaxPixels:h})).draw()}},{key:"_getModel",value:function(e){return new u.a(e,Object.assign(this.getShaders(),{id:this.props.id,geometry:new d.a({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,-1,1,0,1,1,0,1,-1,0])}}}),isInstanced:!0}))}}]),t}(l.a);v.layerName="ScatterplotLayer",v.defaultProps=p},0:function(e,t){},1:function(e,t){},Al62:function(e,t,i){"use strict";i.d(t,"a",(function(){return n})),i.d(t,"b",(function(){return s}));var n=function(e,t){if(void 0===t&&(t={}),!e)return null;function i(e){}e.addEventListener("webglcontextcreationerror",i,!1);var n=e.getContext("webgl2",t);return(n=n||e.getContext("experimental-webgl2",t))||(n=(n=e.getContext("webgl",t))||e.getContext("experimental-webgl",t)),e.removeEventListener("webglcontextcreationerror",i,!1),n},o=window.devicePixelRatio||window.screen.deviceXDPI/window.screen.logicalXDPI;function s(){return Math.ceil(o)||1}},g56e:function(e,t,i){"use strict";i.r(t);var n=i("q1tI"),o=i("tjUo"),s=i("+7vx"),a=i("1OyB"),r=i("vuIU"),c=i("md7G"),l=i("foSv"),u=i("ReuC"),d=i("Ji7U"),h=i("K7jV"),p=i("S2EH"),v=i("C7oE"),g={getSourcePosition:{type:"accessor",value:function(e){return e.sourcePosition}},getTargetPosition:{type:"accessor",value:function(e){return e.targetPosition}},getColor:{type:"accessor",value:[0,0,0,255]},getWidth:{type:"accessor",value:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0},getStrokeWidth:{deprecatedFor:"getWidth"}},f=function(e){function t(){return Object(a.a)(this,t),Object(c.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(r.a)(t,[{key:"getShaders",value:function(){return Object(u.a)(Object(l.a)(t.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec2 instanceSourcePositions64xyLow;\nattribute vec2 instanceTargetPositions64xyLow;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(instanceSourcePositions, instanceSourcePositions64xyLow, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(instanceTargetPositions, instanceTargetPositions64xyLow, vec3(0.), target_commonspace);\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:"#define SHADER_NAME line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:["project32","picking"]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1}})}},{key:"updateState",value:function(e){var i=e.props,n=e.oldProps,o=e.changeFlags;if(Object(u.a)(Object(l.a)(t.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o}),o.extensionsChanged){var s=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(s)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,i=this.context.viewport,n=this.props,o=n.widthUnits,s=n.widthScale,a=n.widthMinPixels,r=n.widthMaxPixels,c="pixels"===o?i.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{widthScale:s*c,widthMinPixels:a,widthMaxPixels:r})).draw()}},{key:"_getModel",value:function(e){return new p.a(e,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new v.a({drawMode:5,attributes:{positions:new Float32Array([0,-1,0,0,1,0,1,-1,0,1,1,0])}}),isInstanced:!0}))}}]),t}(h.a);f.layerName="LineLayer",f.defaultProps=g;var m=i("7GCR"),y=i("Al62");function x(e){var t=e.start[2]/1e4;return[255*(1-2*t),128*t,255*t,255*(1-t)]}var P=function(e){function t(t,i){var n;return function(e,t,i){t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i}(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(n=e.call(this,t,i)||this),"setRef",(function(e){void 0===e&&(e=null),n.container=e})),n.state={},n.container=null,n.map=null,n.inited=!1,n.deckLayer=null,n}!function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}(t,e);var i=t.prototype;return i.componentDidMount=function(){var e=this.props,t=e.airports,i=void 0===t?"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/line/airports.json":t,n=e.flightPaths,a=void 0===n?"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/line/heathrow-flights.json":n,r=e.getStrokeWidth,c=void 0===r?3.7:r;this.map=new m.Map(this.container,{center:[7,47.65],zoom:5,pitch:45,bearing:0,centerCross:!0,baseLayer:new m.TileLayer("tile",{urlTemplate:"https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/{z}/{x}/{y}"+(Object(y.b)()>1.5?"@2x":"")+"?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejh2N21nMzAxMmQzMnA5emRyN2lucW0ifQ.jSE-g2vsn48Ry928pqylcg"})}),this.deckLayer=new o.a("deck",{layers:[new s.a({id:"airports",data:i,radiusScale:20,getPosition:function(e){return e.coordinates},getColor:[255,140,0],getRadius:function(e){return function(e){return e.search("major")>=0?100:e.search("small")>=0?30:60}(e.type)},pickable:!0}),new f({id:"flight-paths",data:a,fp64:!1,getSourcePosition:function(e){return e.start},getTargetPosition:function(e){return e.end},getColor:x,getWidth:c,pickable:!0})]},{animation:!0,renderer:"webgl"}),this.map.addLayer(this.deckLayer)},i.componentWillUnmount=function(){this.deckLayer&&this.deckLayer.remove()},i.render=function(){return n.createElement("div",{ref:this.setRef,className:"map-content"})},t}(n.Component);t.default=P},tjUo:function(e,t,i){"use strict";var n=i("zGfa"),o=i("mybv"),s=i("7GCR"),a=i("Al62");function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var c={registerEvents:!0,renderer:"webgl",doubleBuffer:!0,glOptions:{alpha:!0,depth:!0,antialias:!0,stencil:!0},forceRenderOnMoving:!0,forceRenderOnZooming:!0},l={useDevicePixels:!0,autoResizeDrawingBuffer:!1},u=12756274*Math.PI/(256*Math.pow(2,20));function d(e){var t=e.getResolution(),i=e.getMaxNativeZoom(),n=e.getCenter(),o=e.getPitch(),s=e.getBearing();return{latitude:n.y,longitude:n.x,zoom:function(e){return 19-Math.log(e/u)/Math.LN2}(t),bearing:s,pitch:o,maxZoom:i}}var h=function(e){function t(t,i,n){var o;return void 0===n&&(n={}),(o=e.call(this,t,Object.assign(c,n))||this).props=Object.assign({},l,i),o._isLoad=!1,o}r(t,e);var i=t.prototype;return i.setProps=function(e){return Object.assign(this.props,e,{id:this.id}),this},i.getProps=function(){return this.props},i.prepareToDraw=function(){},i.draw=function(){this.renderLayer()},i.drawOnInteracting=function(){this.renderLayer()},i.onAdd=function(){},i.onMouseClick=function(e){var t={};e.offsetCenter||(t={type:"click",offsetCenter:e.containerPoint,srcEvent:e.domEvent}),this.deck._onEvent(t)},i.onMouseMove=function(e){var t={};e.offsetCenter||(t={offsetCenter:e.containerPoint,srcEvent:e.domEvent}),this.deck._onPointerMove(t)},i.onMouseDown=function(e){var t={};e.offsetCenter||(t={offsetCenter:e.containerPoint,srcEvent:e.domEvent}),this.deck._onPointerDown(t)},i.onRemove=function(){},i.renderLayer=function(){var e=this,t=this.getMap(),i=this._getRenderer();if(i&&t){var n=this.props._customRender,s=i.gl,a=Object.assign(this.props,{gl:s,width:!1,height:!1,viewState:d(t),_customRender:function(){n&&n()},parameters:{depthMask:!0,depthTest:!0,blendFunc:[s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA],blendEquation:s.FUNC_ADD},userData:{isExternal:!1,layers:new Set},onLoad:function(){e._isLoad=!0,e._drawLayer(t)}});this.deck||this._isLoad||(this.deck=new o.a(a),this.options.registerEvents&&(t.on("mousemove",this.onMouseMove,this),t.on("mousedown",this.onMouseDown,this),t.on("click",this.onMouseClick,this))),this._isLoad&&(this.deck.setProps(a),this.deck.props.userData.isExternal=!0,this._drawLayer(t)),i.completeRender()}},i._drawLayer=function(e){var t=this.deck.props.userData.currentViewport;t||(t=function(e,t,i){return void 0===i&&(i=!0),new n.a(Object.assign({x:0,y:0,width:e.width,height:e.height},d(t),i?{nearZMultiplier:e.height?1/e.height:1,farZMultiplier:1.01}:{nearZMultiplier:.1,farZMultiplier:10}))}(this.deck,e,!0),this.deck.props.userData.currentViewport=t),this.deck.layerManager&&this.deck._drawLayers("maptalks-deck-repaint",{viewports:[t],clearCanvas:!1})},i.remove=function(){var t=this.getMap();this.deck&&t&&(this.options.registerEvents&&(t.off("mousemove",this.onMouseMove,this),t.off("mousedown",this.onMouseDown,this),t.off("click",this.onMouseClick,this)),this.deck.finalize(),delete this.deck),e.prototype.remove.call(this)},t}(s.CanvasLayer),p=function(e){function t(){return e.apply(this,arguments)||this}r(t,e);var i=t.prototype;return i.draw=function(){this.prepareCanvas(),this.prepareDrawContext(),this._drawLayer()},i.needToRedraw=function(){var t=this.getMap();return!(t.isZooming()&&!t.getPitch())&&e.prototype.needToRedraw.call(this)},i.createCanvas=function(){if(!this.canvas&&!this.gl){var e=this.getMap(),t=e.getSize(),i=(e.getDevicePixelRatio?e.getDevicePixelRatio():Object(a.b)())||1,n=[i*t.width,i*t.height],o=n[0],r=n[1];this.canvas=s.Canvas.createCanvas(o,r,e.CanvasClass),this.canvas.style&&(this.canvas.style.width=t+"px",this.canvas.style.height=t+"px"),this.gl=Object(a.a)(this.canvas,this.layer.options.glOptions),this.onCanvasCreate(),this.layer.fire("canvascreate",{context:this.context,gl:this.gl})}},i.resizeCanvas=function(e){if(this.canvas){var t=this.getMap(),i=(t.getDevicePixelRatio?t.getDevicePixelRatio():Object(a.b)())||1,n=e||t.getSize();this.canvas.width===n.width*i&&this.canvas.height===n.height*i||(this.canvas.height=i*n.height,this.canvas.width=i*n.width,this.gl.viewport(0,0,this.canvas.width,this.canvas.height))}},i.clearCanvas=function(){this.canvas&&(this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.context&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height))},i.requestMapToRender=function(){this.setToRedraw()},i.prepareCanvas=function(){this.canvas?this.clearCanvas():this.createCanvas();var t=e.prototype.prepareCanvas.call(this);return this.layer.fire("renderstart",{context:this.context,gl:this.gl}),t},i.onZoomStart=function(){for(var t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];e.prototype.onZoomStart.call(this,i)},i.onZoomEnd=function(){for(var t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];e.prototype.onZoomEnd.call(this,i)},i.remove=function(){e.prototype.remove.call(this)},t}(s.renderer.CanvasLayerRenderer);h.registerRenderer("webgl",p),t.a=h}}]);